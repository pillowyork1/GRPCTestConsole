// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/messages.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Proto.Messages {
  public static partial class MarketDataService
  {
    static readonly string __ServiceName = "Messages.MarketDataService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.SecurityListRequest> __Marshaller_Messages_SecurityListRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.SecurityListRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.SecurityListResponse> __Marshaller_Messages_SecurityListResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.SecurityListResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.MarketDataTopRequest> __Marshaller_Messages_MarketDataTopRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.MarketDataTopRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.MarketDataTopResponse> __Marshaller_Messages_MarketDataTopResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.MarketDataTopResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.MarketDataFullRequest> __Marshaller_Messages_MarketDataFullRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.MarketDataFullRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.MarketDataFullResponse> __Marshaller_Messages_MarketDataFullResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.MarketDataFullResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.SecurityListRequest, global::Proto.Messages.SecurityListResponse> __Method_GetSecurityList = new grpc::Method<global::Proto.Messages.SecurityListRequest, global::Proto.Messages.SecurityListResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetSecurityList",
        __Marshaller_Messages_SecurityListRequest,
        __Marshaller_Messages_SecurityListResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.MarketDataTopRequest, global::Proto.Messages.MarketDataTopResponse> __Method_SubscribeTopMarketData = new grpc::Method<global::Proto.Messages.MarketDataTopRequest, global::Proto.Messages.MarketDataTopResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeTopMarketData",
        __Marshaller_Messages_MarketDataTopRequest,
        __Marshaller_Messages_MarketDataTopResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.MarketDataFullRequest, global::Proto.Messages.MarketDataFullResponse> __Method_SubscribeFullMarketData = new grpc::Method<global::Proto.Messages.MarketDataFullRequest, global::Proto.Messages.MarketDataFullResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeFullMarketData",
        __Marshaller_Messages_MarketDataFullRequest,
        __Marshaller_Messages_MarketDataFullResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.Messages.MessagesReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MarketDataService</summary>
    [grpc::BindServiceMethod(typeof(MarketDataService), "BindService")]
    public abstract partial class MarketDataServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task GetSecurityList(global::Proto.Messages.SecurityListRequest request, grpc::IServerStreamWriter<global::Proto.Messages.SecurityListResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubscribeTopMarketData(global::Proto.Messages.MarketDataTopRequest request, grpc::IServerStreamWriter<global::Proto.Messages.MarketDataTopResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubscribeFullMarketData(global::Proto.Messages.MarketDataFullRequest request, grpc::IServerStreamWriter<global::Proto.Messages.MarketDataFullResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MarketDataService</summary>
    public partial class MarketDataServiceClient : grpc::ClientBase<MarketDataServiceClient>
    {
      /// <summary>Creates a new client for MarketDataService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MarketDataServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MarketDataService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MarketDataServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MarketDataServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MarketDataServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.SecurityListResponse> GetSecurityList(global::Proto.Messages.SecurityListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSecurityList(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.SecurityListResponse> GetSecurityList(global::Proto.Messages.SecurityListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetSecurityList, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.MarketDataTopResponse> SubscribeTopMarketData(global::Proto.Messages.MarketDataTopRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeTopMarketData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.MarketDataTopResponse> SubscribeTopMarketData(global::Proto.Messages.MarketDataTopRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeTopMarketData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.MarketDataFullResponse> SubscribeFullMarketData(global::Proto.Messages.MarketDataFullRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeFullMarketData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.MarketDataFullResponse> SubscribeFullMarketData(global::Proto.Messages.MarketDataFullRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeFullMarketData, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override MarketDataServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MarketDataServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(MarketDataServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetSecurityList, serviceImpl.GetSecurityList)
          .AddMethod(__Method_SubscribeTopMarketData, serviceImpl.SubscribeTopMarketData)
          .AddMethod(__Method_SubscribeFullMarketData, serviceImpl.SubscribeFullMarketData).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MarketDataServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetSecurityList, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Proto.Messages.SecurityListRequest, global::Proto.Messages.SecurityListResponse>(serviceImpl.GetSecurityList));
      serviceBinder.AddMethod(__Method_SubscribeTopMarketData, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Proto.Messages.MarketDataTopRequest, global::Proto.Messages.MarketDataTopResponse>(serviceImpl.SubscribeTopMarketData));
      serviceBinder.AddMethod(__Method_SubscribeFullMarketData, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Proto.Messages.MarketDataFullRequest, global::Proto.Messages.MarketDataFullResponse>(serviceImpl.SubscribeFullMarketData));
    }

  }
  public static partial class OrderRouterService
  {
    static readonly string __ServiceName = "Messages.OrderRouterService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.OrderRequest> __Marshaller_Messages_OrderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.OrderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.OrderResponse> __Marshaller_Messages_OrderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.OrderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.OrderCancelReplaceResponse> __Marshaller_Messages_OrderCancelReplaceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.OrderCancelReplaceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.SubscribeOrderStatusRequest> __Marshaller_Messages_SubscribeOrderStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.SubscribeOrderStatusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.OrderStatusResponse> __Marshaller_Messages_OrderStatusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.OrderStatusResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.BasketRequest> __Marshaller_Messages_BasketRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.BasketRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.ProtoEmpty> __Marshaller_Messages_ProtoEmpty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.ProtoEmpty.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.OrderRequest, global::Proto.Messages.OrderResponse> __Method_SendNewOrder = new grpc::Method<global::Proto.Messages.OrderRequest, global::Proto.Messages.OrderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendNewOrder",
        __Marshaller_Messages_OrderRequest,
        __Marshaller_Messages_OrderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.OrderRequest, global::Proto.Messages.OrderCancelReplaceResponse> __Method_CancelOrder = new grpc::Method<global::Proto.Messages.OrderRequest, global::Proto.Messages.OrderCancelReplaceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelOrder",
        __Marshaller_Messages_OrderRequest,
        __Marshaller_Messages_OrderCancelReplaceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.OrderRequest, global::Proto.Messages.OrderCancelReplaceResponse> __Method_ModifyOrder = new grpc::Method<global::Proto.Messages.OrderRequest, global::Proto.Messages.OrderCancelReplaceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ModifyOrder",
        __Marshaller_Messages_OrderRequest,
        __Marshaller_Messages_OrderCancelReplaceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.SubscribeOrderStatusRequest, global::Proto.Messages.OrderStatusResponse> __Method_SubscribeOrderStatus = new grpc::Method<global::Proto.Messages.SubscribeOrderStatusRequest, global::Proto.Messages.OrderStatusResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeOrderStatus",
        __Marshaller_Messages_SubscribeOrderStatusRequest,
        __Marshaller_Messages_OrderStatusResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.BasketRequest, global::Proto.Messages.ProtoEmpty> __Method_SendBasket = new grpc::Method<global::Proto.Messages.BasketRequest, global::Proto.Messages.ProtoEmpty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendBasket",
        __Marshaller_Messages_BasketRequest,
        __Marshaller_Messages_ProtoEmpty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.Messages.MessagesReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of OrderRouterService</summary>
    [grpc::BindServiceMethod(typeof(OrderRouterService), "BindService")]
    public abstract partial class OrderRouterServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.OrderResponse> SendNewOrder(global::Proto.Messages.OrderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.OrderCancelReplaceResponse> CancelOrder(global::Proto.Messages.OrderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.OrderCancelReplaceResponse> ModifyOrder(global::Proto.Messages.OrderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubscribeOrderStatus(global::Proto.Messages.SubscribeOrderStatusRequest request, grpc::IServerStreamWriter<global::Proto.Messages.OrderStatusResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.ProtoEmpty> SendBasket(global::Proto.Messages.BasketRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for OrderRouterService</summary>
    public partial class OrderRouterServiceClient : grpc::ClientBase<OrderRouterServiceClient>
    {
      /// <summary>Creates a new client for OrderRouterService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public OrderRouterServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for OrderRouterService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public OrderRouterServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected OrderRouterServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected OrderRouterServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.OrderResponse SendNewOrder(global::Proto.Messages.OrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendNewOrder(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.OrderResponse SendNewOrder(global::Proto.Messages.OrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendNewOrder, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.OrderResponse> SendNewOrderAsync(global::Proto.Messages.OrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendNewOrderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.OrderResponse> SendNewOrderAsync(global::Proto.Messages.OrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendNewOrder, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.OrderCancelReplaceResponse CancelOrder(global::Proto.Messages.OrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelOrder(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.OrderCancelReplaceResponse CancelOrder(global::Proto.Messages.OrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelOrder, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.OrderCancelReplaceResponse> CancelOrderAsync(global::Proto.Messages.OrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelOrderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.OrderCancelReplaceResponse> CancelOrderAsync(global::Proto.Messages.OrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelOrder, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.OrderCancelReplaceResponse ModifyOrder(global::Proto.Messages.OrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModifyOrder(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.OrderCancelReplaceResponse ModifyOrder(global::Proto.Messages.OrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ModifyOrder, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.OrderCancelReplaceResponse> ModifyOrderAsync(global::Proto.Messages.OrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModifyOrderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.OrderCancelReplaceResponse> ModifyOrderAsync(global::Proto.Messages.OrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ModifyOrder, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.OrderStatusResponse> SubscribeOrderStatus(global::Proto.Messages.SubscribeOrderStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeOrderStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.OrderStatusResponse> SubscribeOrderStatus(global::Proto.Messages.SubscribeOrderStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeOrderStatus, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.ProtoEmpty SendBasket(global::Proto.Messages.BasketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendBasket(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.ProtoEmpty SendBasket(global::Proto.Messages.BasketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendBasket, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.ProtoEmpty> SendBasketAsync(global::Proto.Messages.BasketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendBasketAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.ProtoEmpty> SendBasketAsync(global::Proto.Messages.BasketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendBasket, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override OrderRouterServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new OrderRouterServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(OrderRouterServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SendNewOrder, serviceImpl.SendNewOrder)
          .AddMethod(__Method_CancelOrder, serviceImpl.CancelOrder)
          .AddMethod(__Method_ModifyOrder, serviceImpl.ModifyOrder)
          .AddMethod(__Method_SubscribeOrderStatus, serviceImpl.SubscribeOrderStatus)
          .AddMethod(__Method_SendBasket, serviceImpl.SendBasket).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, OrderRouterServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SendNewOrder, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.OrderRequest, global::Proto.Messages.OrderResponse>(serviceImpl.SendNewOrder));
      serviceBinder.AddMethod(__Method_CancelOrder, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.OrderRequest, global::Proto.Messages.OrderCancelReplaceResponse>(serviceImpl.CancelOrder));
      serviceBinder.AddMethod(__Method_ModifyOrder, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.OrderRequest, global::Proto.Messages.OrderCancelReplaceResponse>(serviceImpl.ModifyOrder));
      serviceBinder.AddMethod(__Method_SubscribeOrderStatus, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Proto.Messages.SubscribeOrderStatusRequest, global::Proto.Messages.OrderStatusResponse>(serviceImpl.SubscribeOrderStatus));
      serviceBinder.AddMethod(__Method_SendBasket, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.BasketRequest, global::Proto.Messages.ProtoEmpty>(serviceImpl.SendBasket));
    }

  }
  public static partial class DropCopyService
  {
    static readonly string __ServiceName = "Messages.DropCopyService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.AllTradesFilterRequest> __Marshaller_Messages_AllTradesFilterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.AllTradesFilterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.AllTradesResponse> __Marshaller_Messages_AllTradesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.AllTradesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.SubscribeOrderStatusRequest> __Marshaller_Messages_SubscribeOrderStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.SubscribeOrderStatusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.OrderResponse> __Marshaller_Messages_OrderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.OrderResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.AllTradesFilterRequest, global::Proto.Messages.AllTradesResponse> __Method_GetAllTrades = new grpc::Method<global::Proto.Messages.AllTradesFilterRequest, global::Proto.Messages.AllTradesResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllTrades",
        __Marshaller_Messages_AllTradesFilterRequest,
        __Marshaller_Messages_AllTradesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.SubscribeOrderStatusRequest, global::Proto.Messages.OrderResponse> __Method_SubscribeOrderStatus = new grpc::Method<global::Proto.Messages.SubscribeOrderStatusRequest, global::Proto.Messages.OrderResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeOrderStatus",
        __Marshaller_Messages_SubscribeOrderStatusRequest,
        __Marshaller_Messages_OrderResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.Messages.MessagesReflection.Descriptor.Services[2]; }
    }

    /// <summary>Base class for server-side implementations of DropCopyService</summary>
    [grpc::BindServiceMethod(typeof(DropCopyService), "BindService")]
    public abstract partial class DropCopyServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task GetAllTrades(global::Proto.Messages.AllTradesFilterRequest request, grpc::IServerStreamWriter<global::Proto.Messages.AllTradesResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubscribeOrderStatus(global::Proto.Messages.SubscribeOrderStatusRequest request, grpc::IServerStreamWriter<global::Proto.Messages.OrderResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DropCopyService</summary>
    public partial class DropCopyServiceClient : grpc::ClientBase<DropCopyServiceClient>
    {
      /// <summary>Creates a new client for DropCopyService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DropCopyServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DropCopyService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DropCopyServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DropCopyServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DropCopyServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.AllTradesResponse> GetAllTrades(global::Proto.Messages.AllTradesFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllTrades(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.AllTradesResponse> GetAllTrades(global::Proto.Messages.AllTradesFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllTrades, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.OrderResponse> SubscribeOrderStatus(global::Proto.Messages.SubscribeOrderStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeOrderStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.OrderResponse> SubscribeOrderStatus(global::Proto.Messages.SubscribeOrderStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeOrderStatus, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override DropCopyServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DropCopyServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(DropCopyServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAllTrades, serviceImpl.GetAllTrades)
          .AddMethod(__Method_SubscribeOrderStatus, serviceImpl.SubscribeOrderStatus).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DropCopyServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAllTrades, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Proto.Messages.AllTradesFilterRequest, global::Proto.Messages.AllTradesResponse>(serviceImpl.GetAllTrades));
      serviceBinder.AddMethod(__Method_SubscribeOrderStatus, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Proto.Messages.SubscribeOrderStatusRequest, global::Proto.Messages.OrderResponse>(serviceImpl.SubscribeOrderStatus));
    }

  }
  public static partial class BlotterService
  {
    static readonly string __ServiceName = "Messages.BlotterService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.AllTradesFilterRequest> __Marshaller_Messages_AllTradesFilterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.AllTradesFilterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.BlotterMessage> __Marshaller_Messages_BlotterMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.BlotterMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.BlotterLiveSubscribe> __Marshaller_Messages_BlotterLiveSubscribe = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.BlotterLiveSubscribe.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.TimeAndSalesSubscribe> __Marshaller_Messages_TimeAndSalesSubscribe = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.TimeAndSalesSubscribe.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.TimeAndSales> __Marshaller_Messages_TimeAndSales = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.TimeAndSales.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.ProtoEmpty> __Marshaller_Messages_ProtoEmpty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.ProtoEmpty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.Activity> __Marshaller_Messages_Activity = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.Activity.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.AllTradesFilterRequest, global::Proto.Messages.BlotterMessage> __Method_GetHistoricalBlotterItems = new grpc::Method<global::Proto.Messages.AllTradesFilterRequest, global::Proto.Messages.BlotterMessage>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetHistoricalBlotterItems",
        __Marshaller_Messages_AllTradesFilterRequest,
        __Marshaller_Messages_BlotterMessage);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.BlotterLiveSubscribe, global::Proto.Messages.BlotterMessage> __Method_GetAllBlotterItems = new grpc::Method<global::Proto.Messages.BlotterLiveSubscribe, global::Proto.Messages.BlotterMessage>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllBlotterItems",
        __Marshaller_Messages_BlotterLiveSubscribe,
        __Marshaller_Messages_BlotterMessage);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.TimeAndSalesSubscribe, global::Proto.Messages.TimeAndSales> __Method_GetTimeAndSales = new grpc::Method<global::Proto.Messages.TimeAndSalesSubscribe, global::Proto.Messages.TimeAndSales>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetTimeAndSales",
        __Marshaller_Messages_TimeAndSalesSubscribe,
        __Marshaller_Messages_TimeAndSales);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.ProtoEmpty, global::Proto.Messages.Activity> __Method_GetActivities = new grpc::Method<global::Proto.Messages.ProtoEmpty, global::Proto.Messages.Activity>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetActivities",
        __Marshaller_Messages_ProtoEmpty,
        __Marshaller_Messages_Activity);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.Messages.MessagesReflection.Descriptor.Services[3]; }
    }

    /// <summary>Base class for server-side implementations of BlotterService</summary>
    [grpc::BindServiceMethod(typeof(BlotterService), "BindService")]
    public abstract partial class BlotterServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task GetHistoricalBlotterItems(global::Proto.Messages.AllTradesFilterRequest request, grpc::IServerStreamWriter<global::Proto.Messages.BlotterMessage> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task GetAllBlotterItems(global::Proto.Messages.BlotterLiveSubscribe request, grpc::IServerStreamWriter<global::Proto.Messages.BlotterMessage> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task GetTimeAndSales(global::Proto.Messages.TimeAndSalesSubscribe request, grpc::IServerStreamWriter<global::Proto.Messages.TimeAndSales> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task GetActivities(global::Proto.Messages.ProtoEmpty request, grpc::IServerStreamWriter<global::Proto.Messages.Activity> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BlotterService</summary>
    public partial class BlotterServiceClient : grpc::ClientBase<BlotterServiceClient>
    {
      /// <summary>Creates a new client for BlotterService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BlotterServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BlotterService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BlotterServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BlotterServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BlotterServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.BlotterMessage> GetHistoricalBlotterItems(global::Proto.Messages.AllTradesFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHistoricalBlotterItems(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.BlotterMessage> GetHistoricalBlotterItems(global::Proto.Messages.AllTradesFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetHistoricalBlotterItems, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.BlotterMessage> GetAllBlotterItems(global::Proto.Messages.BlotterLiveSubscribe request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllBlotterItems(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.BlotterMessage> GetAllBlotterItems(global::Proto.Messages.BlotterLiveSubscribe request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllBlotterItems, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.TimeAndSales> GetTimeAndSales(global::Proto.Messages.TimeAndSalesSubscribe request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTimeAndSales(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.TimeAndSales> GetTimeAndSales(global::Proto.Messages.TimeAndSalesSubscribe request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetTimeAndSales, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.Activity> GetActivities(global::Proto.Messages.ProtoEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetActivities(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.Activity> GetActivities(global::Proto.Messages.ProtoEmpty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetActivities, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override BlotterServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BlotterServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(BlotterServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetHistoricalBlotterItems, serviceImpl.GetHistoricalBlotterItems)
          .AddMethod(__Method_GetAllBlotterItems, serviceImpl.GetAllBlotterItems)
          .AddMethod(__Method_GetTimeAndSales, serviceImpl.GetTimeAndSales)
          .AddMethod(__Method_GetActivities, serviceImpl.GetActivities).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, BlotterServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetHistoricalBlotterItems, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Proto.Messages.AllTradesFilterRequest, global::Proto.Messages.BlotterMessage>(serviceImpl.GetHistoricalBlotterItems));
      serviceBinder.AddMethod(__Method_GetAllBlotterItems, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Proto.Messages.BlotterLiveSubscribe, global::Proto.Messages.BlotterMessage>(serviceImpl.GetAllBlotterItems));
      serviceBinder.AddMethod(__Method_GetTimeAndSales, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Proto.Messages.TimeAndSalesSubscribe, global::Proto.Messages.TimeAndSales>(serviceImpl.GetTimeAndSales));
      serviceBinder.AddMethod(__Method_GetActivities, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Proto.Messages.ProtoEmpty, global::Proto.Messages.Activity>(serviceImpl.GetActivities));
    }

  }
  public static partial class StrategyService
  {
    static readonly string __ServiceName = "Messages.StrategyService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.StrategyCreateRequest> __Marshaller_Messages_StrategyCreateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.StrategyCreateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.StrategyCRUDResponse> __Marshaller_Messages_StrategyCRUDResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.StrategyCRUDResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.StrategyEmpty> __Marshaller_Messages_StrategyEmpty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.StrategyEmpty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.StrategyRetrieveResponse> __Marshaller_Messages_StrategyRetrieveResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.StrategyRetrieveResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.StrategyGRPC> __Marshaller_Messages_StrategyGRPC = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.StrategyGRPC.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.StrategyGUIDRequest> __Marshaller_Messages_StrategyGUIDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.StrategyGUIDRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.StrategyStatusResponse> __Marshaller_Messages_StrategyStatusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.StrategyStatusResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.SubscribeStrategyStatusRequest> __Marshaller_Messages_SubscribeStrategyStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.SubscribeStrategyStatusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.StrategySubscribeResponse> __Marshaller_Messages_StrategySubscribeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.StrategySubscribeResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.StrategyCreateRequest, global::Proto.Messages.StrategyCRUDResponse> __Method_CreateStrategy = new grpc::Method<global::Proto.Messages.StrategyCreateRequest, global::Proto.Messages.StrategyCRUDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateStrategy",
        __Marshaller_Messages_StrategyCreateRequest,
        __Marshaller_Messages_StrategyCRUDResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.StrategyEmpty, global::Proto.Messages.StrategyRetrieveResponse> __Method_RetrieveStrategies = new grpc::Method<global::Proto.Messages.StrategyEmpty, global::Proto.Messages.StrategyRetrieveResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RetrieveStrategies",
        __Marshaller_Messages_StrategyEmpty,
        __Marshaller_Messages_StrategyRetrieveResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.StrategyGRPC, global::Proto.Messages.StrategyCRUDResponse> __Method_UpdateStrategy = new grpc::Method<global::Proto.Messages.StrategyGRPC, global::Proto.Messages.StrategyCRUDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateStrategy",
        __Marshaller_Messages_StrategyGRPC,
        __Marshaller_Messages_StrategyCRUDResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.StrategyGUIDRequest, global::Proto.Messages.StrategyCRUDResponse> __Method_CancelStrategy = new grpc::Method<global::Proto.Messages.StrategyGUIDRequest, global::Proto.Messages.StrategyCRUDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelStrategy",
        __Marshaller_Messages_StrategyGUIDRequest,
        __Marshaller_Messages_StrategyCRUDResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.StrategyGUIDRequest, global::Proto.Messages.StrategyStatusResponse> __Method_StartStrategy = new grpc::Method<global::Proto.Messages.StrategyGUIDRequest, global::Proto.Messages.StrategyStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartStrategy",
        __Marshaller_Messages_StrategyGUIDRequest,
        __Marshaller_Messages_StrategyStatusResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.StrategyGUIDRequest, global::Proto.Messages.StrategyStatusResponse> __Method_StopStrategy = new grpc::Method<global::Proto.Messages.StrategyGUIDRequest, global::Proto.Messages.StrategyStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StopStrategy",
        __Marshaller_Messages_StrategyGUIDRequest,
        __Marshaller_Messages_StrategyStatusResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.SubscribeStrategyStatusRequest, global::Proto.Messages.StrategySubscribeResponse> __Method_SubscribeStrategyChange = new grpc::Method<global::Proto.Messages.SubscribeStrategyStatusRequest, global::Proto.Messages.StrategySubscribeResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeStrategyChange",
        __Marshaller_Messages_SubscribeStrategyStatusRequest,
        __Marshaller_Messages_StrategySubscribeResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.Messages.MessagesReflection.Descriptor.Services[4]; }
    }

    /// <summary>Base class for server-side implementations of StrategyService</summary>
    [grpc::BindServiceMethod(typeof(StrategyService), "BindService")]
    public abstract partial class StrategyServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.StrategyCRUDResponse> CreateStrategy(global::Proto.Messages.StrategyCreateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.StrategyRetrieveResponse> RetrieveStrategies(global::Proto.Messages.StrategyEmpty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.StrategyCRUDResponse> UpdateStrategy(global::Proto.Messages.StrategyGRPC request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.StrategyCRUDResponse> CancelStrategy(global::Proto.Messages.StrategyGUIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.StrategyStatusResponse> StartStrategy(global::Proto.Messages.StrategyGUIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.StrategyStatusResponse> StopStrategy(global::Proto.Messages.StrategyGUIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubscribeStrategyChange(global::Proto.Messages.SubscribeStrategyStatusRequest request, grpc::IServerStreamWriter<global::Proto.Messages.StrategySubscribeResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for StrategyService</summary>
    public partial class StrategyServiceClient : grpc::ClientBase<StrategyServiceClient>
    {
      /// <summary>Creates a new client for StrategyService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public StrategyServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for StrategyService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public StrategyServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected StrategyServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected StrategyServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.StrategyCRUDResponse CreateStrategy(global::Proto.Messages.StrategyCreateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateStrategy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.StrategyCRUDResponse CreateStrategy(global::Proto.Messages.StrategyCreateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateStrategy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.StrategyCRUDResponse> CreateStrategyAsync(global::Proto.Messages.StrategyCreateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateStrategyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.StrategyCRUDResponse> CreateStrategyAsync(global::Proto.Messages.StrategyCreateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateStrategy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.StrategyRetrieveResponse RetrieveStrategies(global::Proto.Messages.StrategyEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetrieveStrategies(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.StrategyRetrieveResponse RetrieveStrategies(global::Proto.Messages.StrategyEmpty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RetrieveStrategies, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.StrategyRetrieveResponse> RetrieveStrategiesAsync(global::Proto.Messages.StrategyEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetrieveStrategiesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.StrategyRetrieveResponse> RetrieveStrategiesAsync(global::Proto.Messages.StrategyEmpty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RetrieveStrategies, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.StrategyCRUDResponse UpdateStrategy(global::Proto.Messages.StrategyGRPC request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateStrategy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.StrategyCRUDResponse UpdateStrategy(global::Proto.Messages.StrategyGRPC request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateStrategy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.StrategyCRUDResponse> UpdateStrategyAsync(global::Proto.Messages.StrategyGRPC request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateStrategyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.StrategyCRUDResponse> UpdateStrategyAsync(global::Proto.Messages.StrategyGRPC request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateStrategy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.StrategyCRUDResponse CancelStrategy(global::Proto.Messages.StrategyGUIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelStrategy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.StrategyCRUDResponse CancelStrategy(global::Proto.Messages.StrategyGUIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelStrategy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.StrategyCRUDResponse> CancelStrategyAsync(global::Proto.Messages.StrategyGUIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelStrategyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.StrategyCRUDResponse> CancelStrategyAsync(global::Proto.Messages.StrategyGUIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelStrategy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.StrategyStatusResponse StartStrategy(global::Proto.Messages.StrategyGUIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartStrategy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.StrategyStatusResponse StartStrategy(global::Proto.Messages.StrategyGUIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartStrategy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.StrategyStatusResponse> StartStrategyAsync(global::Proto.Messages.StrategyGUIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartStrategyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.StrategyStatusResponse> StartStrategyAsync(global::Proto.Messages.StrategyGUIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartStrategy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.StrategyStatusResponse StopStrategy(global::Proto.Messages.StrategyGUIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopStrategy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.StrategyStatusResponse StopStrategy(global::Proto.Messages.StrategyGUIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StopStrategy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.StrategyStatusResponse> StopStrategyAsync(global::Proto.Messages.StrategyGUIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopStrategyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.StrategyStatusResponse> StopStrategyAsync(global::Proto.Messages.StrategyGUIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StopStrategy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.StrategySubscribeResponse> SubscribeStrategyChange(global::Proto.Messages.SubscribeStrategyStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeStrategyChange(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.StrategySubscribeResponse> SubscribeStrategyChange(global::Proto.Messages.SubscribeStrategyStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeStrategyChange, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override StrategyServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new StrategyServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(StrategyServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateStrategy, serviceImpl.CreateStrategy)
          .AddMethod(__Method_RetrieveStrategies, serviceImpl.RetrieveStrategies)
          .AddMethod(__Method_UpdateStrategy, serviceImpl.UpdateStrategy)
          .AddMethod(__Method_CancelStrategy, serviceImpl.CancelStrategy)
          .AddMethod(__Method_StartStrategy, serviceImpl.StartStrategy)
          .AddMethod(__Method_StopStrategy, serviceImpl.StopStrategy)
          .AddMethod(__Method_SubscribeStrategyChange, serviceImpl.SubscribeStrategyChange).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, StrategyServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateStrategy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.StrategyCreateRequest, global::Proto.Messages.StrategyCRUDResponse>(serviceImpl.CreateStrategy));
      serviceBinder.AddMethod(__Method_RetrieveStrategies, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.StrategyEmpty, global::Proto.Messages.StrategyRetrieveResponse>(serviceImpl.RetrieveStrategies));
      serviceBinder.AddMethod(__Method_UpdateStrategy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.StrategyGRPC, global::Proto.Messages.StrategyCRUDResponse>(serviceImpl.UpdateStrategy));
      serviceBinder.AddMethod(__Method_CancelStrategy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.StrategyGUIDRequest, global::Proto.Messages.StrategyCRUDResponse>(serviceImpl.CancelStrategy));
      serviceBinder.AddMethod(__Method_StartStrategy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.StrategyGUIDRequest, global::Proto.Messages.StrategyStatusResponse>(serviceImpl.StartStrategy));
      serviceBinder.AddMethod(__Method_StopStrategy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.StrategyGUIDRequest, global::Proto.Messages.StrategyStatusResponse>(serviceImpl.StopStrategy));
      serviceBinder.AddMethod(__Method_SubscribeStrategyChange, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Proto.Messages.SubscribeStrategyStatusRequest, global::Proto.Messages.StrategySubscribeResponse>(serviceImpl.SubscribeStrategyChange));
    }

  }
  public static partial class VoiceService
  {
    static readonly string __ServiceName = "Messages.VoiceService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.ListVoiceRequest> __Marshaller_Messages_ListVoiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.ListVoiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.ListVoiceResponse> __Marshaller_Messages_ListVoiceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.ListVoiceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.VoiceDefaultRequest> __Marshaller_Messages_VoiceDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.VoiceDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.VoiceDefaultResponse> __Marshaller_Messages_VoiceDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.VoiceDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.InsertVoiceRequest> __Marshaller_Messages_InsertVoiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.InsertVoiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.InsertVoiceResponse> __Marshaller_Messages_InsertVoiceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.InsertVoiceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.VoiceCancelRequest> __Marshaller_Messages_VoiceCancelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.VoiceCancelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.VoiceAlertRequest> __Marshaller_Messages_VoiceAlertRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.VoiceAlertRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.ProtoEmpty> __Marshaller_Messages_ProtoEmpty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.ProtoEmpty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.GetVoiceDesksResponse> __Marshaller_Messages_GetVoiceDesksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.GetVoiceDesksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.GetVoiceUsersResponse> __Marshaller_Messages_GetVoiceUsersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.GetVoiceUsersResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.ListVoiceRequest, global::Proto.Messages.ListVoiceResponse> __Method_ListVoices = new grpc::Method<global::Proto.Messages.ListVoiceRequest, global::Proto.Messages.ListVoiceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListVoices",
        __Marshaller_Messages_ListVoiceRequest,
        __Marshaller_Messages_ListVoiceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse> __Method_GetVoice = new grpc::Method<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetVoice",
        __Marshaller_Messages_VoiceDefaultRequest,
        __Marshaller_Messages_VoiceDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.InsertVoiceRequest, global::Proto.Messages.InsertVoiceResponse> __Method_InsertVoice = new grpc::Method<global::Proto.Messages.InsertVoiceRequest, global::Proto.Messages.InsertVoiceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InsertVoice",
        __Marshaller_Messages_InsertVoiceRequest,
        __Marshaller_Messages_InsertVoiceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse> __Method_Accept = new grpc::Method<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Accept",
        __Marshaller_Messages_VoiceDefaultRequest,
        __Marshaller_Messages_VoiceDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse> __Method_Reject = new grpc::Method<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Reject",
        __Marshaller_Messages_VoiceDefaultRequest,
        __Marshaller_Messages_VoiceDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.VoiceCancelRequest, global::Proto.Messages.VoiceDefaultResponse> __Method_RequestCancel = new grpc::Method<global::Proto.Messages.VoiceCancelRequest, global::Proto.Messages.VoiceDefaultResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "RequestCancel",
        __Marshaller_Messages_VoiceCancelRequest,
        __Marshaller_Messages_VoiceDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse> __Method_AcceptCancel = new grpc::Method<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AcceptCancel",
        __Marshaller_Messages_VoiceDefaultRequest,
        __Marshaller_Messages_VoiceDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse> __Method_RejectCancel = new grpc::Method<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RejectCancel",
        __Marshaller_Messages_VoiceDefaultRequest,
        __Marshaller_Messages_VoiceDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse> __Method_RejectCancelB3 = new grpc::Method<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RejectCancelB3",
        __Marshaller_Messages_VoiceDefaultRequest,
        __Marshaller_Messages_VoiceDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse> __Method_AcceptCancelB3 = new grpc::Method<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AcceptCancelB3",
        __Marshaller_Messages_VoiceDefaultRequest,
        __Marshaller_Messages_VoiceDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.VoiceAlertRequest, global::Proto.Messages.VoiceDefaultResponse> __Method_ListenVoiceAlerts = new grpc::Method<global::Proto.Messages.VoiceAlertRequest, global::Proto.Messages.VoiceDefaultResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ListenVoiceAlerts",
        __Marshaller_Messages_VoiceAlertRequest,
        __Marshaller_Messages_VoiceDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.ProtoEmpty, global::Proto.Messages.GetVoiceDesksResponse> __Method_GetVoiceDesks = new grpc::Method<global::Proto.Messages.ProtoEmpty, global::Proto.Messages.GetVoiceDesksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetVoiceDesks",
        __Marshaller_Messages_ProtoEmpty,
        __Marshaller_Messages_GetVoiceDesksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.ProtoEmpty, global::Proto.Messages.GetVoiceUsersResponse> __Method_GetVoiceUsers = new grpc::Method<global::Proto.Messages.ProtoEmpty, global::Proto.Messages.GetVoiceUsersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetVoiceUsers",
        __Marshaller_Messages_ProtoEmpty,
        __Marshaller_Messages_GetVoiceUsersResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.Messages.MessagesReflection.Descriptor.Services[5]; }
    }

    /// <summary>Base class for server-side implementations of VoiceService</summary>
    [grpc::BindServiceMethod(typeof(VoiceService), "BindService")]
    public abstract partial class VoiceServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.ListVoiceResponse> ListVoices(global::Proto.Messages.ListVoiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.VoiceDefaultResponse> GetVoice(global::Proto.Messages.VoiceDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.InsertVoiceResponse> InsertVoice(global::Proto.Messages.InsertVoiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.VoiceDefaultResponse> Accept(global::Proto.Messages.VoiceDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.VoiceDefaultResponse> Reject(global::Proto.Messages.VoiceDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task RequestCancel(global::Proto.Messages.VoiceCancelRequest request, grpc::IServerStreamWriter<global::Proto.Messages.VoiceDefaultResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.VoiceDefaultResponse> AcceptCancel(global::Proto.Messages.VoiceDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.VoiceDefaultResponse> RejectCancel(global::Proto.Messages.VoiceDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.VoiceDefaultResponse> RejectCancelB3(global::Proto.Messages.VoiceDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.VoiceDefaultResponse> AcceptCancelB3(global::Proto.Messages.VoiceDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ListenVoiceAlerts(global::Proto.Messages.VoiceAlertRequest request, grpc::IServerStreamWriter<global::Proto.Messages.VoiceDefaultResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.GetVoiceDesksResponse> GetVoiceDesks(global::Proto.Messages.ProtoEmpty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.GetVoiceUsersResponse> GetVoiceUsers(global::Proto.Messages.ProtoEmpty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for VoiceService</summary>
    public partial class VoiceServiceClient : grpc::ClientBase<VoiceServiceClient>
    {
      /// <summary>Creates a new client for VoiceService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public VoiceServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for VoiceService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public VoiceServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected VoiceServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected VoiceServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.ListVoiceResponse ListVoices(global::Proto.Messages.ListVoiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListVoices(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.ListVoiceResponse ListVoices(global::Proto.Messages.ListVoiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListVoices, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.ListVoiceResponse> ListVoicesAsync(global::Proto.Messages.ListVoiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListVoicesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.ListVoiceResponse> ListVoicesAsync(global::Proto.Messages.ListVoiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListVoices, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.VoiceDefaultResponse GetVoice(global::Proto.Messages.VoiceDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVoice(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.VoiceDefaultResponse GetVoice(global::Proto.Messages.VoiceDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetVoice, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.VoiceDefaultResponse> GetVoiceAsync(global::Proto.Messages.VoiceDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVoiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.VoiceDefaultResponse> GetVoiceAsync(global::Proto.Messages.VoiceDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetVoice, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.InsertVoiceResponse InsertVoice(global::Proto.Messages.InsertVoiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertVoice(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.InsertVoiceResponse InsertVoice(global::Proto.Messages.InsertVoiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InsertVoice, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.InsertVoiceResponse> InsertVoiceAsync(global::Proto.Messages.InsertVoiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertVoiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.InsertVoiceResponse> InsertVoiceAsync(global::Proto.Messages.InsertVoiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InsertVoice, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.VoiceDefaultResponse Accept(global::Proto.Messages.VoiceDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Accept(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.VoiceDefaultResponse Accept(global::Proto.Messages.VoiceDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Accept, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.VoiceDefaultResponse> AcceptAsync(global::Proto.Messages.VoiceDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AcceptAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.VoiceDefaultResponse> AcceptAsync(global::Proto.Messages.VoiceDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Accept, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.VoiceDefaultResponse Reject(global::Proto.Messages.VoiceDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Reject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.VoiceDefaultResponse Reject(global::Proto.Messages.VoiceDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Reject, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.VoiceDefaultResponse> RejectAsync(global::Proto.Messages.VoiceDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RejectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.VoiceDefaultResponse> RejectAsync(global::Proto.Messages.VoiceDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Reject, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.VoiceDefaultResponse> RequestCancel(global::Proto.Messages.VoiceCancelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RequestCancel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.VoiceDefaultResponse> RequestCancel(global::Proto.Messages.VoiceCancelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_RequestCancel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.VoiceDefaultResponse AcceptCancel(global::Proto.Messages.VoiceDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AcceptCancel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.VoiceDefaultResponse AcceptCancel(global::Proto.Messages.VoiceDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AcceptCancel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.VoiceDefaultResponse> AcceptCancelAsync(global::Proto.Messages.VoiceDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AcceptCancelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.VoiceDefaultResponse> AcceptCancelAsync(global::Proto.Messages.VoiceDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AcceptCancel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.VoiceDefaultResponse RejectCancel(global::Proto.Messages.VoiceDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RejectCancel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.VoiceDefaultResponse RejectCancel(global::Proto.Messages.VoiceDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RejectCancel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.VoiceDefaultResponse> RejectCancelAsync(global::Proto.Messages.VoiceDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RejectCancelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.VoiceDefaultResponse> RejectCancelAsync(global::Proto.Messages.VoiceDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RejectCancel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.VoiceDefaultResponse RejectCancelB3(global::Proto.Messages.VoiceDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RejectCancelB3(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.VoiceDefaultResponse RejectCancelB3(global::Proto.Messages.VoiceDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RejectCancelB3, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.VoiceDefaultResponse> RejectCancelB3Async(global::Proto.Messages.VoiceDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RejectCancelB3Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.VoiceDefaultResponse> RejectCancelB3Async(global::Proto.Messages.VoiceDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RejectCancelB3, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.VoiceDefaultResponse AcceptCancelB3(global::Proto.Messages.VoiceDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AcceptCancelB3(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.VoiceDefaultResponse AcceptCancelB3(global::Proto.Messages.VoiceDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AcceptCancelB3, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.VoiceDefaultResponse> AcceptCancelB3Async(global::Proto.Messages.VoiceDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AcceptCancelB3Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.VoiceDefaultResponse> AcceptCancelB3Async(global::Proto.Messages.VoiceDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AcceptCancelB3, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.VoiceDefaultResponse> ListenVoiceAlerts(global::Proto.Messages.VoiceAlertRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListenVoiceAlerts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Messages.VoiceDefaultResponse> ListenVoiceAlerts(global::Proto.Messages.VoiceAlertRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ListenVoiceAlerts, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.GetVoiceDesksResponse GetVoiceDesks(global::Proto.Messages.ProtoEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVoiceDesks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.GetVoiceDesksResponse GetVoiceDesks(global::Proto.Messages.ProtoEmpty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetVoiceDesks, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.GetVoiceDesksResponse> GetVoiceDesksAsync(global::Proto.Messages.ProtoEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVoiceDesksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.GetVoiceDesksResponse> GetVoiceDesksAsync(global::Proto.Messages.ProtoEmpty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetVoiceDesks, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.GetVoiceUsersResponse GetVoiceUsers(global::Proto.Messages.ProtoEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVoiceUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.GetVoiceUsersResponse GetVoiceUsers(global::Proto.Messages.ProtoEmpty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetVoiceUsers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.GetVoiceUsersResponse> GetVoiceUsersAsync(global::Proto.Messages.ProtoEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVoiceUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.GetVoiceUsersResponse> GetVoiceUsersAsync(global::Proto.Messages.ProtoEmpty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetVoiceUsers, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override VoiceServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new VoiceServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(VoiceServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListVoices, serviceImpl.ListVoices)
          .AddMethod(__Method_GetVoice, serviceImpl.GetVoice)
          .AddMethod(__Method_InsertVoice, serviceImpl.InsertVoice)
          .AddMethod(__Method_Accept, serviceImpl.Accept)
          .AddMethod(__Method_Reject, serviceImpl.Reject)
          .AddMethod(__Method_RequestCancel, serviceImpl.RequestCancel)
          .AddMethod(__Method_AcceptCancel, serviceImpl.AcceptCancel)
          .AddMethod(__Method_RejectCancel, serviceImpl.RejectCancel)
          .AddMethod(__Method_RejectCancelB3, serviceImpl.RejectCancelB3)
          .AddMethod(__Method_AcceptCancelB3, serviceImpl.AcceptCancelB3)
          .AddMethod(__Method_ListenVoiceAlerts, serviceImpl.ListenVoiceAlerts)
          .AddMethod(__Method_GetVoiceDesks, serviceImpl.GetVoiceDesks)
          .AddMethod(__Method_GetVoiceUsers, serviceImpl.GetVoiceUsers).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, VoiceServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListVoices, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.ListVoiceRequest, global::Proto.Messages.ListVoiceResponse>(serviceImpl.ListVoices));
      serviceBinder.AddMethod(__Method_GetVoice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse>(serviceImpl.GetVoice));
      serviceBinder.AddMethod(__Method_InsertVoice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.InsertVoiceRequest, global::Proto.Messages.InsertVoiceResponse>(serviceImpl.InsertVoice));
      serviceBinder.AddMethod(__Method_Accept, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse>(serviceImpl.Accept));
      serviceBinder.AddMethod(__Method_Reject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse>(serviceImpl.Reject));
      serviceBinder.AddMethod(__Method_RequestCancel, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Proto.Messages.VoiceCancelRequest, global::Proto.Messages.VoiceDefaultResponse>(serviceImpl.RequestCancel));
      serviceBinder.AddMethod(__Method_AcceptCancel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse>(serviceImpl.AcceptCancel));
      serviceBinder.AddMethod(__Method_RejectCancel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse>(serviceImpl.RejectCancel));
      serviceBinder.AddMethod(__Method_RejectCancelB3, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse>(serviceImpl.RejectCancelB3));
      serviceBinder.AddMethod(__Method_AcceptCancelB3, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.VoiceDefaultRequest, global::Proto.Messages.VoiceDefaultResponse>(serviceImpl.AcceptCancelB3));
      serviceBinder.AddMethod(__Method_ListenVoiceAlerts, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Proto.Messages.VoiceAlertRequest, global::Proto.Messages.VoiceDefaultResponse>(serviceImpl.ListenVoiceAlerts));
      serviceBinder.AddMethod(__Method_GetVoiceDesks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.ProtoEmpty, global::Proto.Messages.GetVoiceDesksResponse>(serviceImpl.GetVoiceDesks));
      serviceBinder.AddMethod(__Method_GetVoiceUsers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.ProtoEmpty, global::Proto.Messages.GetVoiceUsersResponse>(serviceImpl.GetVoiceUsers));
    }

  }
  public static partial class SlimCalcService
  {
    static readonly string __ServiceName = "Messages.SlimCalcService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.QuotationRequest> __Marshaller_Messages_QuotationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.QuotationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Messages.QuotationResponse> __Marshaller_Messages_QuotationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Messages.QuotationResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Messages.QuotationRequest, global::Proto.Messages.QuotationResponse> __Method_GetQuotation = new grpc::Method<global::Proto.Messages.QuotationRequest, global::Proto.Messages.QuotationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetQuotation",
        __Marshaller_Messages_QuotationRequest,
        __Marshaller_Messages_QuotationResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.Messages.MessagesReflection.Descriptor.Services[6]; }
    }

    /// <summary>Base class for server-side implementations of SlimCalcService</summary>
    [grpc::BindServiceMethod(typeof(SlimCalcService), "BindService")]
    public abstract partial class SlimCalcServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Messages.QuotationResponse> GetQuotation(global::Proto.Messages.QuotationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SlimCalcService</summary>
    public partial class SlimCalcServiceClient : grpc::ClientBase<SlimCalcServiceClient>
    {
      /// <summary>Creates a new client for SlimCalcService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SlimCalcServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SlimCalcService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SlimCalcServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SlimCalcServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SlimCalcServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.QuotationResponse GetQuotation(global::Proto.Messages.QuotationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetQuotation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Messages.QuotationResponse GetQuotation(global::Proto.Messages.QuotationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetQuotation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.QuotationResponse> GetQuotationAsync(global::Proto.Messages.QuotationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetQuotationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Messages.QuotationResponse> GetQuotationAsync(global::Proto.Messages.QuotationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetQuotation, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SlimCalcServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SlimCalcServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SlimCalcServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetQuotation, serviceImpl.GetQuotation).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SlimCalcServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetQuotation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Messages.QuotationRequest, global::Proto.Messages.QuotationResponse>(serviceImpl.GetQuotation));
    }

  }
}
#endregion
